Состояние ячеек игрового поля нужно где-то хранить. Для этой задачи создадим матрицу (двумерный массив) с размерами
игрового поля. Чтобы увидеть состояние игры на экране, нам нужно передать в отображение данные из матрицы. Отображение
отвечает только за визуальную информацию и смысловой нагрузки не несет.
В этом нам поможет метод setCellColor(int, int, Color) класса Game, параметры которого — координаты и цвет ячейки. Давай
вызовем его и передадим координаты каждой ячейки матрицы и любой цвет (например, Color.ORANGE).
Предлагаем вынести отрисовку матрицы на отображении в отдельный метод createGame(), который потом вызовем из метода
initialize(). Запусти программу и посмотри, что получилось.
Подсказка: чтобы вызвать метод setCellColor(int, int, Color) для каждой ячейки матрицы, воспользуйся циклами.

Требования:
В классе MinesweeperGame должна существовать приватная матрица (двумерный массив) gameField с типом GameObject[][] и
размером SIDEхSIDE.
В классе MinesweeperGame должен существовать приватный метод void createGame().
В методе createGame() нужно заполнить все ячейки массива gameField новыми объектами типа GameObject с соответствующими
координатами x и y.
В методе createGame() для каждой ячейки массива gameField нужно вызвать метод setCellColor(int, int, Color) с
параметрами: координаты x и y, а также любой цвет (например, Color.ORANGE).
В методе initialize() должен быть вызван метод createGame().