Согласно правилам игры, при открытии ячейки, количество "заминированных" соседей которой равно нулю, открывается
некоторая "не заминированная" область до ячеек с "заминированными" соседями. Давай это реализуем... Предлагаю
использовать рекурсию. Ее применяют тогда, когда алгоритм решения задачи совпадает с алгоритмом решения подзадачи
(части). У нас как раз такой случай.
При открытии ячейки с нулевым количеством "заминированных" соседей нам нужно сделать полный перебор всех закрытых
соседних ячеек, вызвать у них метод openTile(int, int) и повторить процесс.
Также в методе openTile(int, int) реализуем показ в ячейке количества "заминированных" соседей.
Запусти игру, чтобы проверить корректность реализации.

Подсказка: если получил java.lang.StackOverflowError, значит ты поздно устанавливаешь флаг, что ячейка уже открыта.

Требования:
В методе openTile(int, int), если элемент не является миной и количество соседей-мин равно нулю, для каждого не
открытого соседа должен рекурсивно вызываться метод openTile(int, int).
Метод openTile(int, int) должен вызывать метод getNeighbors(GameObject), если элемент не является миной и количество
соседей-мин равно нулю.
В методе openTile(int, int), если элемент не является миной и количество соседей мин не равняется нулю, на игровое поле
должно выводиться количество заминированных соседей. Используй метод setCellNumber(int, int, int).
Метод openTile(int, int) не должен ничего выводить, если элемент не является миной и количество соседей мин равно нулю.
Используй пустую строку.