Теперь давай займемся подсчетом мин в соседних ячейках. Для этого каждой ячейке матрицы добавим параметр (поле класса),
который отвечает за количество "заминированных" соседей.
Для начала найдем всех соседей, а потом посчитаем, сколько из них "заминированы". Для получения списка соседей у тебя
появился метод getNeighbors, который принимает один параметр типа GameObject (ячейку).
И, наконец, в отдельном методе мы посчитаем количество "заминированных" соседей для каждой ячейки gameField и внесем это
значение в соответствующее поле ячейки матрицы
Хотя визуально твоя работа не видна (ты же запустил программу, чтобы посмотреть что получилось?), она очень важна для
будущих шагов..

Требования:
В классе GameObject должно существовать публичное поле countMineNeighbors типа int.
В классе MinesweeperGame должен существовать приватный void метод countMineNeighbors().
Метод countMineNeighbors() должен для каждой ячейки "не мины" из матрицы gameField подсчитать количество соседних ячеек
"мин" и установить это значение в поле countMineNeighbors.
В методе countMineNeighbors() должен использоваться метод getNeighbors(GameObject gameObject).
В методе createGame() после создания всех элементов матрицы gameField должен быть вызван метод countMineNeighbors().