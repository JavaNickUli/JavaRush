Одним из игровых объектов будет яблоко. Создай для него класс Apple и унаследуй его от класса GameObject.
Чтобы отобразить яблоко на игровом поле, можно покрасить ячейку, содержащую яблоко, в какой-нибудь цвет. Или можно
вывести в этой ячейке какой-нибудь символ, похожий на яблоко. Пусть класс Apple хранит этот символ в переменной
APPLE_SIGN.
В классе Apple добавь метод draw(Game): он будет отрисовывать яблоко на игровом поле. Для этого в методе draw(Game game)
нужно вызвать: game.setCellValueEx(...)..
Так как в классе Apple используются классы Game и Color, а эти (и другие) классы "движка" находятся в пакете
com.javarush.engine.cell, то чтобы ими пользоваться, класс Apple должен содержать такой импорт:
import com.javarush.engine.cell.*;
Чтобы посмотреть, как будет выглядеть яблоко, в методе createGame() создай новое с координатами (7, 7) и вызови у него
метод draw(Game).

Требования:
Должен существовать публичный класс Apple.
Класс Apple должен быть наследником класса GameObject.
В классе Apple должен существовать один конструктор с двумя параметрами типа int (x и y), который вызывает конструктор
базового класса с параметрами x и y, используя ключевое слово super.
В классе Apple должно существовать приватное статическое final поле String APPLE_SIGN, инициализированное при объявлении.
Например, использовать можно UTF-16 символ яблока "\uD83C\uDF4E".
В классе Apple должен существовать публичный void метод draw(Game).
В методе draw(Game) должен быть вызван метод setCellValueEx(int, int, Color, String, Color, int) у объекта типа Game с
параметрами: x, y, Color.NONE, APPLE_SIGN, <цвет яблока>, 75. (<цвет яблока> используй какой тебе нравится, например,
Color.GREEN).
В методе createGame() класса SnakeGame должно быть создано новое яблоко (экземпляр класса Apple) с координатами: 7, 7.
У созданного яблока должен быть вызван метод draw(Game). В качестве параметра метода передай this.
В классе Apple должен быть импорт всего содержимого пакета com.javarush.engine.cell.